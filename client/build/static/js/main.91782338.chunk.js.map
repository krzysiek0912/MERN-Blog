{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/layout/MainMenu/MainMenu.js","components/common/Logo/Logo.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/requestReducer.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/common/Rating/Rating.js","utils/cutText.js","components/features/Post/Post.js","components/features/Post/PostContainer.js","components/features/PostsList/PostsList.js","components/common/Pagination/Pagination.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePages.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPages.js","components/pages/NotFound/NotFound.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPages.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/features/EditPost/EditPost.js","components/features/EditPost/EditPostContainer.js","components/pages/EditPost/EditPostPages.js","components/pages/NewPost/NewPostPages.js","components/pages/Contact/ContactPages.js","components/features/RandomPost/RandomPost.js","components/features/RandomPost/RandomPostContainer.js","components/pages/RandomPost/RandomPostPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","defaultProps","PropTypes","node","MainMenu","links","location","map","link","index","key","pathname","path","to","title","withRouter","props","Logo","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","createActionName","name","getRequest","request","START_REQUEST","END_REQUEST","RESET_REQUEST","ERROR_REQUEST","startRequest","palyload","type","endRequest","errorRequest","error","resetRequestObj","dispatch","resetRequest","initialState","pending","success","requestPost","requestForm","getPages","posts","Math","ceil","amount","postsPerPage","LOAD_POSTS","LOAD_POSTS_PAGE","LOAD_CURENT_POST","LOAD_RANDOM_POST","LOAD_EDIT_POST","loadPostsByPage","payload","data","curentPost","editPost","randomPost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","Rating","rating","ratingAdd","ratingSub","onClick","cutText","content","maxLength","length","substr","lastIndexOf","Post","handleAddRating","ratingChange","post","ratingValue","value","setState","handleSubRating","isSingle","id","author","connect","ratingType","a","console","log","axios","_id","message","ratingRequest","PostsList","Pagination","changePageRight","changePage","changePageLeft","newPage","onPageChange","initialPage","pages","PaginationList","Array","el","page","Spinner","animationIn","animationOut","Alert","icon","Posts","loadPostsPage","postsView","isPagination","pagination","undefined","startAt","limit","get","res","loadPostsByPageRequest","HomePage","PostsCounter","count","counter","PostsPage","NotFoundPage","SinglePost","loadCurentPost","appId","href","NotFound","loadCurentPostRequest","SinglePostPage","match","params","TextField","label","onChange","htmlFor","SectionTitle","PostForm","isEdit","componentWillUnmount","handleChange","e","target","handleEditor","text","handleSubmit","addPost","postToEdit","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","editPostRequest","typeRequest","EditPost","loadEditPost","loadEditPostRequest","EditPostPage","NewPostPage","ContactPage","loadRandomPost","RandomPost","App","exact","component","Home","NewPost","Contact","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91782338.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => <div className=\"container-fluid\">{children}</div>;\n\nPageContainer.defaultProps = {\n  children: PropTypes.node,\n};\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    {links.map((link, index) => (\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>\r\n          {link.title}\r\n        </Link>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props} />);\r\n","import React from 'react';\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => <h1 className=\"logo\">Blog.app</h1>;\r\n\r\nexport default Logo;\r\n","import React from 'react';\nimport MainMenu from '../../layout/MainMenu/MainMenu';\nimport Logo from '../../common/Logo/Logo';\nimport './NavBar.scss';\n\nclass NavBar extends React.Component {\n  state = {\n    links: [\n      { path: '/', title: 'Home' },\n      { path: '/posts/random', title: 'Random post' },\n      { path: '/posts/new', title: 'Add post' },\n      { path: '/posts', title: 'Posts' },\n      { path: '/contact', title: 'Contact' },\n    ],\n  };\n\n  render() {\n    const { links } = this.state;\n\n    return (\n      <nav className=\"navbar\">\n        <Logo />\n        <MainMenu links={links} />\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport PageContainer from '../PageContainer/PageContainer';\nimport NavBar from '../../features/NavBar/NavBar';\n\nconst MainLayout = ({ children }) => (\n  <div>\n    <PageContainer>\n      <NavBar />\n      {children}\n    </PageContainer>\n  </div>\n);\n\nexport default MainLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => <h1 className=\"page-title\">{children}</h1>;\n\nPageTitle.defaultProps = {\n  children: '',\n};\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\nexport const BASE_URL = 'https://mernblog1.herokuapp.com';\n\n// export const API_URL = 'http://localhost:8000/api';\n// export const BASE_URL = 'http://localhost:3000';\n","const reducerName = 'request';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* SELECTORS */\nexport const getRequest = ({ request }) => request;\n\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\n\nexport const startRequest = palyload => ({ palyload, type: START_REQUEST });\nexport const endRequest = palyload => ({ palyload, type: END_REQUEST });\nexport const resetRequest = palyload => ({ palyload, type: RESET_REQUEST });\nexport const errorRequest = (error, palyload) => ({ palyload, error, type: ERROR_REQUEST });\n\nexport const resetRequestObj = palyload => {\n  return dispatch => {\n    dispatch(resetRequest(palyload));\n  };\n};\n\nconst initialState = {\n  request: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n  requestPost: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n  requestForm: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n};\n\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    case START_REQUEST:\n      return { ...statePart, [action.palyload]: { pending: true, error: null, success: null } };\n    case END_REQUEST:\n      return { ...statePart, [action.palyload]: { pending: false, error: null, success: true } };\n    case RESET_REQUEST:\n      return { ...statePart, [action.palyload]: { pending: false, error: null, success: null } };\n    case ERROR_REQUEST:\n      return {\n        ...statePart,\n        [action.palyload]: { pending: false, error: action.error, success: false },\n      };\n    default:\n      return statePart;\n  }\n}\n","import axios from 'axios';\nimport { API_URL } from '../config';\nimport { startRequest, endRequest, errorRequest } from './requestReducer';\n\n/* SELECTORS */\nexport const getPosts = ({ posts }) => posts.data;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\nexport const getCurentPages = ({ posts }) => posts.presentPage;\nexport const getCurentPost = ({ posts }) => posts.curentPost;\nexport const getRandomPost = ({ posts }) => posts.randomPost;\nexport const getEditPost = ({ posts }) => posts.editPost;\nexport const getPostsCount = ({ posts }) => posts.data.length;\n\n// action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* ACTIONS */\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\nexport const LOAD_CURENT_POST = createActionName('LOAD_CURENT_POST');\nexport const LOAD_RANDOM_POST = createActionName('LOAD_RANDOM_POST');\nexport const LOAD_EDIT_POST = createActionName('LOAD_EDIT_POST');\n\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\nexport const loadCurentPost = payload => ({ payload, type: LOAD_CURENT_POST });\nexport const loadRandomPost = payload => ({ payload, type: LOAD_RANDOM_POST });\nexport const loadEditPost = payload => ({ payload, type: LOAD_EDIT_POST });\n\n/* THUNKS */\nexport const loadPostsRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest('requestPost'));\n    try {\n      const res = await axios.get(`${API_URL}/posts`);\n      dispatch(loadPosts(res.data));\n      dispatch(endRequest('requestPost'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestPost'));\n    }\n  };\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage = 10) => {\n  return async dispatch => {\n    dispatch(startRequest('requestPost'));\n    try {\n      const startAt = (page - 1) * postsPerPage;\n      const limit = postsPerPage;\n\n      const res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\n      // await new Promise(resolve => setTimeout(resolve, 10));\n\n      const payload = {\n        posts: res.data.posts,\n        amount: res.data.amount,\n        postsPerPage,\n        presentPage: page,\n      };\n\n      dispatch(loadPostsByPage(payload));\n      dispatch(endRequest('requestPost'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestPost'));\n    }\n  };\n};\n\nexport const loadCurentPostRequest = id => {\n  return async dispatch => {\n    dispatch(startRequest('requestPost'));\n    try {\n      const res = await axios.get(`${API_URL}/posts/${id}`);\n      dispatch(loadCurentPost(res.data));\n      dispatch(endRequest('requestPost'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestPost'));\n    }\n  };\n};\n\nexport const loadRandomPostRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest('requestPost'));\n    try {\n      const res = await axios.get(`${API_URL}/posts/random`);\n      dispatch(loadRandomPost(res.data));\n      dispatch(endRequest('requestPost'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestPost'));\n    }\n  };\n};\n\nexport const loadEditPostRequest = id => {\n  return async dispatch => {\n    dispatch(startRequest('requestPost'));\n    try {\n      const res = await axios.get(`${API_URL}/posts/${id}`);\n      dispatch(loadEditPost(res.data));\n      dispatch(endRequest('requestPost'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestPost'));\n    }\n  };\n};\n\nexport const addPostRequest = post => {\n  return async dispatch => {\n    dispatch(startRequest('requestForm'));\n    try {\n      await axios.post(`${API_URL}/posts`, post);\n      dispatch(endRequest('requestForm'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestForm'));\n    }\n  };\n};\n\nexport const editPostRequest = post => {\n  return async dispatch => {\n    dispatch(startRequest('requestForm'));\n    try {\n      await axios.post(`${API_URL}/update/${post._id}`, post);\n      dispatch(endRequest('requestForm'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestForm'));\n    }\n  };\n};\nexport const ratingRequest = (post, ratingType) => {\n  return async dispatch => {\n    dispatch(startRequest('requestRating'));\n    try {\n      if (ratingType === 'add') post.rating++;\n      if (ratingType === 'sub' && post.rating > 0) post.rating--;\n      console.log(post.rating);\n      await axios.post(`${API_URL}/update/${post._id}`, post);\n\n      dispatch(endRequest('requestRating'));\n    } catch (e) {\n      dispatch(errorRequest(e.message, 'requestRating'));\n    }\n  };\n};\n\n/* INITIAL STATE */\n\nconst initialState = {\n  data: [],\n  curentPost: {},\n  editPost: {},\n  randomPost: {},\n  amount: 0,\n  postsPerPage: 10,\n  presentPage: 1,\n};\n\n/* REDUCER */\n\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return { ...statePart, data: action.payload };\n    case LOAD_POSTS_PAGE:\n      return {\n        ...statePart,\n        postsPerPage: action.payload.postsPerPage,\n        presentPage: action.payload.presentPage,\n        amount: action.payload.amount,\n        data: [...action.payload.posts],\n      };\n    case LOAD_CURENT_POST:\n      return { ...statePart, curentPost: action.payload };\n    case LOAD_RANDOM_POST:\n      return { ...statePart, randomPost: action.payload };\n    case LOAD_EDIT_POST:\n      return { ...statePart, editPost: action.payload };\n    default:\n      return statePart;\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button type=\"button\" {...otherProps} className={`button button--${variant}`}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    {children}\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({ children, ...otherProps }) => (\n  <div {...otherProps}>{ReactHtmlParser(children)}</div>\n);\nHtmlBox.defaultProps = {\n  children: '',\n};\nHtmlBox.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default HtmlBox;\n","import React from 'react';\n\nconst Rating = ({ rating, ratingAdd, ratingSub }) => (\n  <span>\n    <button type=\"button\" onClick={ratingAdd}>\n      +\n    </button>\n    {rating}\n    <button type=\"button\" onClick={ratingSub}>\n      -\n    </button>\n  </span>\n);\n\nexport default Rating;\n","const cutText = (content, maxLength) => {\n  if (content.length < 1) return 'Error';\n  if (content.length <= maxLength) return content;\n  return `${content.substr(0, content.lastIndexOf(' ', maxLength))}...`;\n};\n\nexport default cutText;\n","import './Post.scss';\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '../../common/Button/Button';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport Rating from '../../common/Rating/Rating';\nimport cutText from '../../../utils/cutText';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    const { post } = this.props;\n    this.state = {\n      ratingValue: post.rating,\n    };\n  }\n\n  handleAddRating = () => {\n    const { ratingChange, post } = this.props;\n    const { ratingValue } = this.state;\n    ratingChange(post, 'add');\n    const value = ratingValue + 1;\n    this.setState({ ratingValue: value });\n  };\n\n  handleSubRating = () => {\n    const { ratingChange, post } = this.props;\n    const { ratingValue } = this.state;\n    ratingChange(post, 'sub');\n    if (ratingValue > 0) {\n      const value = ratingValue - 1;\n      this.setState({ ratingValue: value });\n    }\n  };\n\n  render() {\n    const { handleSubRating, handleAddRating, props } = this;\n    const { post, isSingle } = props;\n    const { id, title, content, author } = post;\n    const { ratingValue } = this.state;\n\n    return (\n      <article className=\"post-summary\">\n        {isSingle && <PageTitle>{title}</PageTitle>}\n        {!isSingle && <SmallTitle>{title}</SmallTitle>}\n        <p>\n          Author: {author}{' '}\n          <Rating rating={ratingValue} ratingSub={handleSubRating} ratingAdd={handleAddRating} />\n        </p>\n        <HtmlBox>{isSingle ? content : cutText(content, 50)}</HtmlBox>\n        {!isSingle && (\n          <>\n            <Button variant=\"primary\">\n              <Link to={`/posts/${id}`}>Read more</Link>\n            </Button>\n            <Button variant=\"primary\">\n              <Link to={`/posts/edit/${id}`}>Edit</Link>\n            </Button>\n          </>\n        )}\n      </article>\n    );\n  }\n}\n\nPost.defaultProps = {\n  id: '',\n  title: '',\n  content: '',\n  rating: 0,\n};\n\nPost.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  rating: PropTypes.number,\n};\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport { ratingRequest } from '../../../redux/postsRedux';\nimport Post from './Post';\n\nconst mapDispatchToProps = dispatch => ({\n  ratingChange: (post, ratingType) => dispatch(ratingRequest(post, ratingType)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Post);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport Post from '../Post/PostContainer';\n\nconst PostsList = ({ posts }) => (\n  <div>\n    <section className=\"posts-list\">\n      {posts.map(post => (\n        <Post key={post.id} post={post} />\n      ))}\n    </section>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default PostsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.scss';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      presentPage: props.initialPage || 1,\n    };\n  }\n\n  changePageRight = () => {\n    const { presentPage } = this.state;\n    const { changePage } = this;\n    changePage(presentPage + 1);\n  };\n\n  changePageLeft = () => {\n    const { presentPage } = this.state;\n    const { changePage } = this;\n    changePage(presentPage - 1);\n  };\n\n  changePage = newPage => {\n    const { onPageChange } = this.props;\n\n    this.setState({ presentPage: newPage });\n    onPageChange(newPage);\n  };\n\n  render() {\n    const { pages } = this.props;\n    const { presentPage } = this.state;\n    const { changePage, changePageLeft, changePageRight } = this;\n\n    const PaginationList = [...Array(pages)].map((el, page) => {\n      return (\n        <li\n          key={++page}\n          onClick={() => {\n            changePage(page);\n          }}\n          className={`pagination__list__item${\n            page === presentPage ? ' pagination__list__item--active' : ''\n          }`}\n        >\n          {page}\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"pagination\">\n        <ul className=\"pagination__list\">\n          {presentPage > 1 && (\n            <li className=\"pagination__list__item\" onClick={changePageLeft}>\n              {'<'}\n            </li>\n          )}\n          {PaginationList}\n          {presentPage < pages && (\n            <li className=\"pagination__list__item\" onClick={changePageRight}>\n              {'>'}\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  pages: PropTypes.number.isRequired,\n  initialPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n  const icon = () => {\r\n    switch (variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />;\r\n      case 'success':\r\n        return <MdDone />;\r\n      case 'warning':\r\n        return <MdErrorOutline />;\r\n      case 'error':\r\n        return <MdErrorOutline />;\r\n      default:\r\n        return <MdInfoOutline />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostsList from '../PostsList/PostsList';\nimport Pagination from '../../common/Pagination/Pagination';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    const { loadPostsByPage, initialPage = 1, postsPerPage } = this.props;\n\n    loadPostsByPage(initialPage, postsPerPage);\n  }\n\n  loadPostsPage = page => {\n    const { loadPostsByPage, postsPerPage } = this.props;\n    loadPostsByPage(page, postsPerPage);\n  };\n\n  render() {\n    const { loadPostsPage } = this;\n    const { posts, request, pages, presentPage, pagination } = this.props;\n    const { pending, error, success } = request.requestPost;\n    let postsView;\n    let isPagination;\n    if (pagination === undefined) {\n      isPagination = true;\n    } else {\n      isPagination = false;\n    }\n\n    if (pending === false) {\n      if (success === true) {\n        postsView = (\n          <>\n            <PostsList posts={posts} />\n            {isPagination && (\n              <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} />\n            )}\n          </>\n        );\n      } else if (error !== null) {\n        postsView = <Alert variant=\"error\"> {error} </Alert>;\n      }\n    } else if (success === null) {\n      postsView = <Spinner />;\n    }\n    return <div>{postsView}</div>;\n  }\n}\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loadPostsByPage: PropTypes.func.isRequired,\n};\n\nexport default Posts;\n","import { connect } from 'react-redux';\nimport {\n  getPosts,\n  loadPostsByPageRequest,\n  getPages,\n  getCurentPages,\n} from '../../../redux/postsRedux';\nimport { getRequest } from '../../../redux/requestReducer';\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  request: getRequest(state),\n  pages: getPages(state),\n  presentPage: getCurentPages(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Posts);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () => (\n  <div>\n    <PageTitle>Blog</PageTitle>\n    <Posts postsPerPage={3} pagination={false} />\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport Alert from '../../common/Alert/Alert';\n\nclass PostsCounter extends React.Component {\n  render() {\n    const { count, request } = this.props;\n    const counter = count > 0 ? <>{count} Posts</> : <Alert variant=\"info\"> No posts </Alert>;\n    return <div>{!request.requestPost.pending && counter}</div>;\n  }\n}\n\nexport default PostsCounter;\n","import { connect } from 'react-redux';\nimport { getPostsCount } from '../../../redux/postsRedux';\nimport { getRequest } from '../../../redux/requestReducer';\nimport PostsCounter from './PostsCounter';\n\nconst mapStateToProps = state => ({\n  count: getPostsCount(state),\n  request: getRequest(state),\n});\n\nexport default connect(mapStateToProps)(PostsCounter);\n","import React from 'react';\n\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst PostsPage = () => (\n  <div>\n    <PageTitle>Posts list</PageTitle>\n    <PostsCounter />\n    <Posts />\n  </div>\n);\n\nexport default PostsPage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>404 Not Found</h1>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\nimport { withRouter } from 'react-router-dom';\nimport { BASE_URL } from '../../../config';\nimport Post from '../Post/PostContainer';\nimport Spinner from '../../common/Spinner/Spinner';\nimport NotFound from '../../pages/NotFound/NotFound';\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const { loadCurentPost, id } = this.props;\n    loadCurentPost(id);\n  }\n\n  render() {\n    const { curentPost, request, location } = this.props;\n    const { pending } = request.requestPost;\n    return (\n      <div>\n        {(pending && <Spinner />) ||\n          (curentPost && (\n            <>\n              <Post post={curentPost} isSingle />\n              <FacebookProvider appId=\"441193243206112\">\n                <Comments href={`${BASE_URL}${location.pathname}`} />\n                <ShareButton href={`${BASE_URL}${location.pathname}`}>Share</ShareButton>\n              </FacebookProvider>\n            </>\n          )) || <NotFound />}\n      </div>\n    );\n  }\n}\n\nSinglePost.propTypes = {\n  loadCurentPost: PropTypes.func.isRequired,\n};\n\nexport default withRouter(props => <SinglePost {...props} />);\n","import { connect } from 'react-redux';\nimport { getCurentPost, loadCurentPostRequest } from '../../../redux/postsRedux';\nimport { getRequest } from '../../../redux/requestReducer';\nimport SinglePost from './SinglePost';\n\nconst mapStateToProps = state => ({\n  curentPost: getCurentPost(state),\n  request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadCurentPost: id => dispatch(loadCurentPostRequest(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SinglePost);\n","import React from 'react';\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\n\nconst SinglePostPage = ({ match }) => (\n  <div>\n    <SinglePost id={match.params.id} />\n  </div>\n);\n\nexport default SinglePostPage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, name = 'text-field', onChange, ...otherProps }) => (\r\n  <label className=\"text-field\" htmlFor=\"text-field\">\r\n    <span className={`text-field__label ${!value.length > 0 ? 'text-field__label--big' : ''}`}>\r\n      {label}\r\n    </span>\r\n    <input\r\n      {...otherProps}\r\n      value={value}\r\n      name={name}\r\n      onChange={onChange}\r\n      className=\"text-field__input\"\r\n    />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => <h2 className=\"section-title\">{children}</h2>;\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport Editor from 'react-medium-editor';\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n  state = {\n    post: {\n      title: '',\n      author: '',\n      content: '',\n      rating: 0,\n    },\n    isEdit: false,\n  };\n\n  componentDidMount() {\n    const { postToEdit } = this.props;\n    if (postToEdit) {\n      const { title, author, content } = postToEdit;\n      this.setState({\n        post: { title, author, content },\n        isEdit: true,\n      });\n    }\n  }\n\n  componentWillUnmount = () => {\n    const { resetRequestObj } = this.props;\n    resetRequestObj('requestForm');\n  };\n\n  handleChange = e => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\n  };\n\n  handleEditor = text => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, content: text } });\n  };\n\n  handleSubmit = e => {\n    const { addPost, postToEdit, editPost } = this.props;\n    const { post } = this.state;\n\n    e.preventDefault();\n    if (!postToEdit) {\n      addPost(post);\n    } else {\n      post._id = postToEdit._id;\n      editPost(post);\n    }\n  };\n\n  render() {\n    const { post, isEdit } = this.state;\n    const { handleChange, handleEditor, handleSubmit } = this;\n    const { request, postToEdit } = this.props;\n    const { error, success, pending } = request.requestForm;\n    if (error) return <Alert variant=\"error\">{error}</Alert>;\n    if (success && isEdit) return <Alert variant=\"success\">Post has been edit</Alert>;\n    if (success && !isEdit) return <Alert variant=\"success\">Post has been added</Alert>;\n    if (pending) return <Spinner />;\n    return (\n      <form onSubmit={handleSubmit}>\n        <TextField label=\"Title\" value={post.title} onChange={handleChange} name=\"title\" />\n\n        <TextField label=\"Author\" value={post.author} onChange={handleChange} name=\"author\" />\n\n        <SectionTitle>Edit post content</SectionTitle>\n\n        <Editor\n          className=\"content-editor\"\n          text={post.content}\n          onChange={handleEditor}\n          options={{\n            placeholder: false,\n            toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] },\n          }}\n        />\n\n        <Button type=\"submit\" variant=\"primary\">\n          {postToEdit ? 'Update post' : 'Add post'}\n        </Button>\n      </form>\n    );\n  }\n}\n\nPostForm.propTypes = {\n  request: PropTypes.shape({\n    pending: PropTypes.bool,\n    error: PropTypes.bool,\n    success: PropTypes.bool,\n  }).isRequired,\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default PostForm;\n","import { connect } from 'react-redux';\nimport { addPostRequest, editPostRequest } from '../../../redux/postsRedux';\nimport { getRequest, resetRequestObj } from '../../../redux/requestReducer';\nimport PostForm from './PostForm';\n\nconst mapStateToProps = state => ({\n  request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: post => dispatch(addPostRequest(post)),\n  editPost: post => dispatch(editPostRequest(post)),\n  resetRequestObj: typeRequest => dispatch(resetRequestObj(typeRequest)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostForm);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport PostForm from '../PostForm/PostFormContainer';\nimport Spinner from '../../common/Spinner/Spinner';\n\nclass EditPost extends React.Component {\n  componentDidMount() {\n    const { loadEditPost, id } = this.props;\n    loadEditPost(id);\n  }\n\n  componentWillUnmount = () => {\n    const { resetRequestObj } = this.props;\n    resetRequestObj('requestPost');\n  };\n\n  render() {\n    const { postToEdit, request } = this.props;\n    const { success } = request.requestPost;\n    return <div>{(success && <PostForm postToEdit={postToEdit} />) || <Spinner />}</div>;\n  }\n}\n\nEditPost.propTypes = {\n  loadEditPost: PropTypes.func.isRequired,\n};\n\nexport default EditPost;\n","import { connect } from 'react-redux';\nimport { getEditPost, loadEditPostRequest } from '../../../redux/postsRedux';\nimport { getRequest, resetRequestObj } from '../../../redux/requestReducer';\nimport EditPost from './EditPost';\n\nconst mapStateToProps = state => ({\n  postToEdit: getEditPost(state),\n  request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadEditPost: id => dispatch(loadEditPostRequest(id)),\n  resetRequestObj: typeRequest => dispatch(resetRequestObj(typeRequest)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EditPost);\n","import React from 'react';\nimport EditPost from '../../features/EditPost/EditPostContainer';\n\nconst EditPostPage = ({ match }) => (\n  <div>\n    <EditPost id={match.params.id} />\n  </div>\n);\n\nexport default EditPostPage;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst NewPostPage = () => (\n  <div>\n    <PageTitle>NewPost</PageTitle>\n    <PostForm />\n  </div>\n);\n\nexport default NewPostPage;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () => (\n  <div>\n    <PageTitle>Contact</PageTitle>\n    <p>Your Favourite Blooger Ltd.</p>\n    <p>9432 Division Street Stone </p>\n    <p>Mountain, GA 30083 </p>\n    <p> </p>\n    <p>Mobile Number: 207-914-3411</p>\n  </div>\n);\n\nexport default ContactPage;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Post from '../Post/PostContainer';\nimport Spinner from '../../common/Spinner/Spinner';\nimport NotFound from '../../pages/NotFound/NotFound';\n\nclass SinglePost extends React.Component {\n  componentDidMount() {\n    const { loadRandomPost, id } = this.props;\n    loadRandomPost(id);\n  }\n\n  render() {\n    const { randomPost, request } = this.props;\n    const { pending } = request.requestPost;\n    return (\n      <div>\n        {(pending && <Spinner />) || (randomPost && <Post post={randomPost} isSingle />) || (\n          <NotFound />\n        )}\n      </div>\n    );\n  }\n}\n\nSinglePost.propTypes = {\n  loadRandomPost: PropTypes.func.isRequired,\n};\n\nexport default SinglePost;\n","import { connect } from 'react-redux';\nimport { getRandomPost, loadRandomPostRequest } from '../../../redux/postsRedux';\nimport { getRequest } from '../../../redux/requestReducer';\nimport RandomPost from './RandomPost';\n\nconst mapStateToProps = state => ({\n  randomPost: getRandomPost(state),\n  request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadRandomPost: () => dispatch(loadRandomPostRequest()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RandomPost);\n","import React from 'react';\nimport RandomPost from '../../features/RandomPost/RandomPostContainer';\n\nconst SinglePostPage = ({ match }) => (\n  <div>\n    <RandomPost />\n  </div>\n);\n\nexport default SinglePostPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePages';\nimport Posts from './components/pages/Posts/PostsPages';\nimport SinglePost from './components/pages/SinglePost/SinglePostPages';\nimport EditPost from './components/pages/EditPost/EditPostPages';\nimport NewPost from './components/pages/NewPost/NewPostPages';\nimport Contact from './components/pages/Contact/ContactPages';\nimport NotFound from './components/pages/NotFound/NotFound';\nimport RandomPost from './components/pages/RandomPost/RandomPostPage';\n\nconst App = () => (\n  <MainLayout>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/posts/new\" component={NewPost} />\n      <Route path=\"/posts/random\" component={RandomPost} />\n      <Route path=\"/posts/edit/:id\" component={EditPost} />\n      <Route path=\"/posts/:id\" component={SinglePost} />\n      <Route path=\"/posts\" exact component={Posts} />\n      <Route path=\"/contact\" exact component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  </MainLayout>\n);\n\nexport default App;\n","import thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\n// import reducers\nimport posts from './postsRedux';\nimport request from './requestReducer';\n\n// combine reducers\nconst rootReducer = combineReducers({\n  posts,\n  request,\n});\n\n// create store\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}